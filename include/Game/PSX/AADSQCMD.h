#ifndef _AADSQCMD_H_
#define _AADSQCMD_H_

#include "common.h"

void aadSubstituteVariables(AadSeqEvent *event, AadSequenceSlot *slot);
void aadGotoSequenceLabel(AadSequenceSlot *slot, int track, int labelNumber);
void metaCmdSelectChannel(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdSelectSlot(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdAssignSequence(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdUsePrimaryTempo();
void metaCmdUseSecondaryTempo();
void metaCmdSetTempo(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdChangeTempo(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdSetTempoFromSequence(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdStartSlot(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdStopSlot(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdPauseSlot(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdResumeSlot(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdSetSlotBendRange();
void metaCmdSetChannelBendRange();
void metaCmdSetSlotVolume(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdSetSlotPan(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdSetChannelVolume(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdSetChannelPan(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdEnableSustainUpdate(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdDisableSustainUpdate(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdMuteChannel(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdUnMuteChannel(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdMuteChannelList(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdUnMuteChannelList(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdSetChannelMute(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdDelayMute(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdUpdateMute(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdChannelVolumeFade();
void metaCmdChannelPanFade();
void metaCmdSlotVolumeFade();
void metaCmdSlotPanFade();
void metaCmdSetChannelProgram(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdSetChannelBasePriority();
void metaCmdSetChannelTranspose(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdIgnoreChannelTranspose(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdRespectChannelTranspose(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdSetChannelPitchMap();
void metaCmdIgnoreChannelPitchMap();
void metaCmdRespectChannelPitchMap();
void metaCmdGetSequenceAssigned(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdGetTempo(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdGetSlotStatus(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdGetChannelMute(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdGetChannelVolume(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdGetChannelPan(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdGetChannelTranspose();
void metaCmdGetChannelProgram(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdGetChannelBasePriority();
void metaCmdGetChannelBendRange();
void metaCmdGetSlotVolume(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdGetSlotPan(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdSetVariable(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdCopyVariable(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdAddVariable(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdSubtractVariable(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdSetVariableBits(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdClearVariableBits(AadSeqEvent *event, AadSequenceSlot *slot);
void aadGotoSequencePosition(AadSequenceSlot *slot, int track, unsigned char *newPosition);
void metaCmdLoopStart(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdLoopEnd(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdLoopBreak();
void metaCmdDefineLabel();
void metaCmdGotoLabel(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdSetSequencePosition(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdBranchIfVarEqual(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdBranchIfVarNotEqual(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdBranchIfVarLess(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdBranchIfVarGreater(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdBranchIfVarLessOrEqual(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdBranchIfVarGreaterOrEqual(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdBranchIfVarBitsSet(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdBranchIfVarBitsClear(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdSubstituteVariableParam1(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdSubstituteVariableParam2(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdSubstituteVariableParam3(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdEndSequence(AadSeqEvent *event, AadSequenceSlot *slot);
void metaCmdPlaySoundEffect();
void metaCmdStopSoundEffect();
void metaCmdSetSoundEffectVolumePan();

#endif
